/*
 * Copyright 2010-2013 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.jet.generators.runtime

import java.io.File
import kotlin.properties.Delegates
import java.io.PrintWriter

enum class ProgressionKind {
    BYTE
    CHAR
    SHORT
    INT
    LONG
    FLOAT
    DOUBLE

    val capitalized = name().toLowerCase().capitalize()
}

val OUTPUT_DIR: File by Delegates.lazy {
    val result = File("runtime/kt/")
    if (!result.exists()) {
        throw IllegalStateException("Output dir does not exist: ${result.getAbsolutePath()}")
    }
    result
}

fun generateRuntimeFile(name: String, generate: (PrintWriter) -> Unit) {
    val file = File(OUTPUT_DIR, name)
    println("generating $file")
    PrintWriter(file) use generate
}

fun generatedBy(out: PrintWriter, generator: String) {
    out.println("// Generated by $generator")
    out.println()
    out.println("package jet")
    out.println()
}
